services:
  web:
    build: .
    expose:
      - "5000"
    volumes:
      - ./instance:/app/instance
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=production
      - SESSION_SECRET=${SESSION_SECRET:-your-secret-key-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///parking.db}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
    command: >
      sh -c "
        echo 'üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...' &&
        python fix_database_permissions.py &&
        echo '‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞' &&
        gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 app:app
      "

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx.prod
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./static:/app/static:ro
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge 