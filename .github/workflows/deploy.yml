name: Deploy to Server

on:
  push:
    branches:
      - master
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /home/ParkingBooker
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
          docker compose down || true
          
          # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
          echo "üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
          git stash || true
          
          # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
          echo "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
          git fetch origin
          git reset --hard origin/master
          
          # –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö docker-compose —Ñ–∞–π–ª–æ–≤
          echo "üßπ –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–∞–π–ª—ã..."
          if [ -f "docker-compose.override.yml" ]; then
            rm docker-compose.override.yml
          fi
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
          echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
          mkdir -p ssl static instance
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
          if [ ! -f "ssl/cert.pem" ] || [ ! -f "ssl/key.pem" ]; then
            echo "‚ö†Ô∏è  SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π..."
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -keyout ssl/key.pem -out ssl/cert.pem \
              -subj "/C=RU/ST=Moscow/L=Moscow/O=ParkingBooker/CN=${{ secrets.DOMAIN_NAME || 'localhost' }}"
          fi
          
          # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å fallback
          echo "üî® –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
          
          # –ü–æ–ø—ã—Ç–∫–∞ 1: –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞
          if docker compose -f docker-compose.prod.yml build --no-cache; then
            echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
          else
            echo "‚ö†Ô∏è  –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º —Å Alpine..."
            
            # –ü–æ–ø—ã—Ç–∫–∞ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Alpine Dockerfile
            cp Dockerfile.alpine Dockerfile
            docker compose -f docker-compose.prod.yml build --no-cache
            
            if [ $? -ne 0 ]; then
              echo "‚ùå –°–±–æ—Ä–∫–∞ —Å Alpine —Ç–æ–∂–µ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º—ã..."
              
              # –ü–æ–ø—ã—Ç–∫–∞ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è —Å–±–æ—Ä–∫–∞
              apt-get update || true
              docker system prune -f
              docker compose -f docker-compose.prod.yml build --no-cache
            fi
          fi
          
          # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          docker compose -f docker-compose.prod.yml up -d
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sleep 20
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
          if curl -f -s --max-time 10 http://localhost > /dev/null; then
            echo "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å nginx"
            docker compose -f docker-compose.prod.yml logs nginx
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          if curl -f -s --max-time 10 http://localhost:5000 > /dev/null; then
            echo "‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"
            docker compose -f docker-compose.prod.yml logs web
            exit 1
          fi
          
          echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
          
          # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
          echo "üßπ –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã..."
          docker image prune -f
