#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
"""

import os
import sys
from pathlib import Path

def check_file_exists(filepath, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if os.path.exists(filepath):
        print(f"‚úÖ {description}: {filepath}")
        return True
    else:
        print(f"‚ùå {description}: {filepath} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    try:
        import flask
        import flask_sqlalchemy
        import werkzeug
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é...\n")
    
    # –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        ("app.py", "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        ("models.py", "–ú–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"),
        ("routes.py", "–ú–∞—Ä—à—Ä—É—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        ("utils.py", "–£—Ç–∏–ª–∏—Ç—ã"),
        ("main.py", "–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"),
        ("Dockerfile", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker"),
        ("docker-compose.yml", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker Compose"),
        ("req.txt", "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python"),
        ("pyproject.toml", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Poetry"),
        (".dockerignore", "–ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Docker"),
        (".gitignore", "–ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Git"),
        ("README.md", "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"),
        ("templates/base.html", "–ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω"),
        ("templates/index.html", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("templates/admin.html", "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"),
        ("templates/admin_login.html", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω"),
        ("templates/success.html", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—Ö–∞"),
        ("static/css/style.css", "–°—Ç–∏–ª–∏ CSS"),
        ("static/js/main.js", "JavaScript"),
    ]
    
    all_files_exist = True
    for filepath, description in required_files:
        if not check_file_exists(filepath, description):
            all_files_exist = False
    
    print("\n" + "="*50)
    
    imports_ok = check_imports()
    
    print("\n" + "="*50)
    
    if all_files_exist and imports_ok:
        print("üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("  docker-compose up --build")
        print("\n–ò–ª–∏ –±–µ–∑ Docker:")
        print("  pip install -r req.txt")
        print("  python main.py")
    else:
        print("‚ö†Ô∏è  –ü—Ä–æ–µ–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º")
        sys.exit(1)

if __name__ == "__main__":
    main() 