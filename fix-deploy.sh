#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –¥–µ–ø–ª–æ—è..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose down || true
docker compose -f docker-compose.prod.yml down || true

# –û—á–∏—Å—Ç–∫–∞ Docker
echo "üßπ –û—á–∏—â–∞–µ–º Docker..."
docker system prune -f
docker volume prune -f
docker network prune -f

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt-get update || true
apt-get upgrade -y || true

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p ssl static instance backups

# –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üîê –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
if [ ! -f "ssl/cert.pem" ] || [ ! -f "ssl/key.pem" ]; then
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout ssl/key.pem -out ssl/cert.pem \
        -subj "/C=RU/ST=Moscow/L=Moscow/O=ParkingBooker/CN=localhost"
fi

# –ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ Dockerfile
echo "üî® –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–±–æ—Ä–∫–∏..."

# –ü–æ–ø—ã—Ç–∫–∞ 1: –û—Å–Ω–æ–≤–Ω–æ–π Dockerfile
echo "–ü–æ–ø—ã—Ç–∫–∞ 1: –û—Å–Ω–æ–≤–Ω–æ–π Dockerfile"
if docker compose -f docker-compose.prod.yml build --no-cache; then
    echo "‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π Dockerfile —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ö†Ô∏è  –û—Å–Ω–æ–≤–Ω–æ–π Dockerfile –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º Alpine..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: Alpine Dockerfile
    cp Dockerfile.alpine Dockerfile
    if docker compose -f docker-compose.prod.yml build --no-cache; then
        echo "‚úÖ Alpine Dockerfile —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Alpine Dockerfile —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        echo "–ü—Ä–æ–±—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
        
        # –ü–æ–ø—ã—Ç–∫–∞ 3: –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        docker compose up -d web
        if [ $? -eq 0 ]; then
            echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            echo "‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å"
            exit 1
        fi
    fi
fi

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose -f docker-compose.prod.yml up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
if curl -f -s --max-time 10 http://localhost > /dev/null; then
    echo "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    docker compose -f docker-compose.prod.yml logs nginx
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Flask
if curl -f -s --max-time 10 http://localhost:5000 > /dev/null; then
    echo "‚úÖ Flask —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Flask –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    docker compose -f docker-compose.prod.yml logs web
fi

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" 